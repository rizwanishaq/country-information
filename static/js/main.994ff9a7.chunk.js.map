{"version":3,"sources":["contexts/CountryContext.js","components/CountryDetails.js","components/CountryPicker.js","pages/HomePage.js","App.js","index.js"],"names":["CountryContext","createContext","CountryContextProvider","children","useState","countries","setCountries","country","setCountry","useEffect","a","fetch","response","json","data","getCountries","Provider","value","fetchCountry","CountryDetails","useContext","useQuery","isLoading","error","Container","Card","Img","variant","src","flag","Body","Title","name","Row","Col","capital","population","sm","ListGroup","languages","map","lang","Item","key","nanoid","currencies","curr","symbol","CountryPicker","Form","Group","controlId","Label","Control","as","custom","onChange","event","target","alpha2Code","HomePage","memo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAEaA,EAAiBC,0BAsBfC,EApBgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACbC,mBAAS,IADI,mBACxCC,EADwC,KAC7BC,EAD6B,OAEjBF,mBAAS,MAFQ,mBAExCG,EAFwC,KAE/BC,EAF+B,KAa/C,OATAC,qBAAU,YACU,uCAAG,8BAAAC,EAAA,sEACIC,MAAM,oCADV,cACbC,EADa,gBAEAA,EAASC,OAFT,OAEbC,EAFa,OAGnBR,EAAaQ,GAHM,2CAAH,qDAKlBC,KACC,IAGD,kBAACf,EAAegB,SAAhB,CAAyBC,MAAO,CAAEV,UAASC,aAAYH,cACpDF,I,gCCbDe,EAAY,uCAAG,WAAOX,GAAP,iBAAAG,EAAA,sEACIC,MAAM,0CAAD,OACgBJ,IAFzB,cACbK,EADa,gBAIAA,EAASC,OAJT,cAIbC,EAJa,yBAKZA,GALY,2CAAH,sDAuDHK,EA/CQ,WAAO,IACpBZ,EAAYa,qBAAWpB,GAAvBO,QADmB,EAEQc,YAAS,CAACd,GAAUW,GAA/CJ,EAFmB,EAEnBA,KAAMQ,EAFa,EAEbA,UAAWC,EAFE,EAEFA,MAEzB,OAAID,EAAkB,6CAClBC,EAAc,sDAGhB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMC,IAAKd,EAAKe,OAClC,kBAACJ,EAAA,EAAKK,KAAN,KACE,kBAACL,EAAA,EAAKM,MAAN,KAAajB,EAAKkB,MAClB,kBAACC,EAAA,EAAD,CAAKN,QAAQ,WACX,kBAACO,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,iBAAenB,EAAKqB,SACpB,kBAACF,EAAA,EAAD,KACE,6CAAmBnB,EAAKsB,cAG5B,kBAACF,EAAA,EAAD,CAAKG,GAAI,GAAT,aACa,IACX,kBAACC,EAAA,EAAD,CAAWX,QAAQ,SAChBb,EAAKyB,UAAUC,KAAI,SAACC,GAAD,OAClB,kBAACH,EAAA,EAAUI,KAAX,CAAgBC,IAAKC,cAAUjB,QAAQ,WACpCc,EAAKT,WAKd,kBAACE,EAAA,EAAD,mBACc,IACZ,kBAACI,EAAA,EAAD,CAAWX,QAAQ,SAChBb,EAAK+B,WAAWL,KAAI,SAACM,GAAD,OACnB,kBAACR,EAAA,EAAUI,KAAX,CAAgBC,IAAKC,cAAUjB,QAAQ,WACpCmB,EAAKd,KADR,IACec,EAAKC,kB,QCjBvBC,EA5BO,WAAO,IAAD,EACiB5B,qBAAWpB,GAA9CO,EADkB,EAClBA,QAASC,EADS,EACTA,WAAYH,EADH,EACGA,UAE7B,OACE,kBAAC4C,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BACpB,kBAACF,EAAA,EAAKG,MAAN,uBACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,GAAG,SACHC,QAAM,EACNtC,MAAOV,EACPiD,SAAU,SAACC,GACTjD,EAAWiD,EAAMC,OAAOzC,SAGzB,IACAZ,GACCA,EAAUmC,KAAI,SAACjC,GAAD,OACZ,4BAAQU,MAAOV,EAAQoD,WAAYhB,IAAKpC,EAAQyB,MAC7CzB,EAAQyB,aCPV4B,EAXEC,gBAAK,WACpB,OACE,oCACE,kBAACrC,EAAA,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,WCGOsC,MAVf,WACE,OACE,oCACE,kBAAC,EAAD,KACE,kBAAC,EAAD,SCDRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.994ff9a7.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const CountryContext = createContext();\n\nconst CountryContextProvider = ({ children }) => {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"CA\");\n\n  useEffect(() => {\n    const getCountries = async () => {\n      const response = await fetch(`https://restcountries.eu/rest/v2`);\n      const data = await response.json();\n      setCountries(data);\n    };\n    getCountries();\n  }, []);\n\n  return (\n    <CountryContext.Provider value={{ country, setCountry, countries }}>\n      {children}\n    </CountryContext.Provider>\n  );\n};\n\nexport default CountryContextProvider;\n","import React, { useContext } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { nanoid } from \"nanoid\";\nimport { CountryContext } from \"../contexts/CountryContext\";\nimport { Card, Row, Col, ListGroup, Container } from \"react-bootstrap\";\n\nconst fetchCountry = async (country) => {\n  const response = await fetch(\n    `https://restcountries.eu/rest/v2/alpha/${country}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nconst CountryDetails = () => {\n  const { country } = useContext(CountryContext);\n  const { data, isLoading, error } = useQuery([country], fetchCountry);\n\n  if (isLoading) return <span>Loading ...</span>;\n  if (error) return <span>oop!! error occurred</span>;\n\n  return (\n    <Container>\n      <Card>\n        <Card.Img variant=\"top\" src={data.flag} />\n        <Card.Body>\n          <Card.Title>{data.name}</Card.Title>\n          <Row variant=\"success\">\n            <Col>\n              <Row>Capital: {data.capital}</Row>\n              <Row>\n                <span>Population: {data.population}</span>\n              </Row>\n            </Col>\n            <Col sm={2}>\n              languages:{\" \"}\n              <ListGroup variant=\"flush\">\n                {data.languages.map((lang) => (\n                  <ListGroup.Item key={nanoid()} variant=\"primary\">\n                    {lang.name}\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Col>\n            <Col>\n              currencies:{\" \"}\n              <ListGroup variant=\"flush\">\n                {data.currencies.map((curr) => (\n                  <ListGroup.Item key={nanoid()} variant=\"success\">\n                    {curr.name} {curr.symbol}\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default CountryDetails;\n","import React, { useContext } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { CountryContext } from \"../contexts/CountryContext\";\n\nconst CountryPicker = () => {\n  const { country, setCountry, countries } = useContext(CountryContext);\n\n  return (\n    <Form>\n      <Form.Group controlId=\"exampleForm.SelectCustom\">\n        <Form.Label>Country-picker</Form.Label>\n        <Form.Control\n          as=\"select\"\n          custom\n          value={country}\n          onChange={(event) => {\n            setCountry(event.target.value);\n          }}\n        >\n          {\" \"}\n          {countries &&\n            countries.map((country) => (\n              <option value={country.alpha2Code} key={country.name}>\n                {country.name}\n              </option>\n            ))}\n        </Form.Control>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default CountryPicker;\n","import React, { memo } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport CountryDetails from \"../components/CountryDetails\";\nimport CountryPicker from \"../components/CountryPicker\";\n\nconst HomePage = memo(() => {\n  return (\n    <>\n      <Container>\n        <CountryPicker />\n        <CountryDetails />\n      </Container>\n    </>\n  );\n});\n\nexport default HomePage;\n","import React from \"react\";\nimport HomePage from \"./pages/HomePage\";\nimport CountryContextProvider from \"./contexts/CountryContext\";\nfunction App() {\n  return (\n    <>\n      <CountryContextProvider>\n        <HomePage />\n      </CountryContextProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}